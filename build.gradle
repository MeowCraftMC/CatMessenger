plugins {
    id 'java'
    id 'maven-publish'
    id 'architectury-plugin' version "${architect_plugin_version}" apply false
    id 'dev.architectury.loom' version "${loom_plugin_version}" apply false
    id 'com.github.johnrengelman.shadow' version "${shadow_plugin_version}" apply false
    id 'xyz.jpenilla.run-paper' version "${run_task_plugin_version}" apply false
    id 'xyz.jpenilla.run-waterfall' version "${run_task_plugin_version}" apply false
    id 'xyz.jpenilla.run-velocity' version "${run_task_plugin_version}" apply false
}

def ENV = System.getenv()

allprojects {
    apply plugin: 'maven-publish'

    group = project_group
    version = project_version

    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        maven {
            name = 'PaperMC'
            url = 'https://repo.papermc.io/repository/maven-public/'
        }

        maven {
            name = 'Architectury'
            url = 'https://maven.architectury.dev/'
        }

        maven {
            name = 'FabricMC'
            url = 'https://maven.fabricmc.net/'
        }

        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/releases/'
        }

        maven {
            name = 'SpigotMC'
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }

        maven {
            name = 'Sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }

        maven {
            name = 'Sonatype Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }

        maven {
            name = 'Mod Menu'
            url = 'https://maven.terraformersmc.com/releases'
        }

        maven {
            name = 'Curse maven'
            url = 'https://cursemaven.com'
            content {
                includeGroup 'curse.maven'
            }
        }

        mavenCentral()
    }

    publishing {
        repositories {
            mavenLocal()

            maven {
                name = 'YuluoMaven'

                def releaseUrl = 'https://maven.yuluo.dev/repository/maven-releases/'
                def snapshotUrl = 'https://maven.yuluo.dev/repository/maven-snapshots/'
                url = ENV.MOD_RELEASE ? releaseUrl : snapshotUrl

                credentials {
                    username ENV.MOD_MAVEN_USER
                    password ENV.MOD_MAVEN_PASS
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    jar.finalizedBy(shadowJar)

    java {
        sourceCompatibility = JavaVersion.toVersion(project.target_java_version)
        targetCompatibility = JavaVersion.toVersion(project.target_java_version)
        toolchain.languageVersion = JavaLanguageVersion.of(project.target_java_version)

        withSourcesJar()
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release = Integer.parseInt(project.target_java_version)
    }

    components.java {
        withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
            skip()
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = project.name
                from components.java
            }
        }
    }
}
